# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

# AWS_PROFILE=ashwin-cff-lambda
# sls invoke local --function sheets --stage beta
# sls deploy --stage beta

# sls deploy --stage prod
# Run it once:
# sls invoke --function sheets --stage prod

service: ccmt-cff-backend-js # NOTE: update this with your service name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs8.10
  profile: ashwin-cff-lambda

# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

  iamRoleStatements: []

  environment:
    mongoConnStr: ${self:custom.mongoConnStr.${opt:stage}}
    mongoCollectionName: ${self:custom.mongoCollectionName.${opt:stage}}
    googleKey: ${self:custom.googleKey.${opt:stage}}
    mapsApiKey: ${self:custom.mapsApiKey.${opt:stage}}

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  sheets:
    handler: scripts/backend/handler.hello
    timeout: 30
    events:
      - schedule: rate(1 hour)
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "ssm:GetParameter"
        Resource:
          - "arn:aws:ssm:*:*:parameter/${self:custom.mongoConnStr.${opt:stage}}"
          - "arn:aws:ssm:*:*:parameter/${self:custom.googleKey.${opt:stage}}"
          - "arn:aws:ssm:*:*:parameter/${self:custom.mapsApiKey.${opt:stage}}"
  # edgeHandler:
  #   handler: scripts/backend/edgeHandler.hello
  #   lambdaAtEdge:
  #     distribution: 'WebsiteDistribution'
  #     eventType: 'origin-response'

custom:
  webpack:
    webpackConfig: webpack.backend.js
  mongoConnStr:
    dev: none
    beta: CFF_COSMOS_CONN_STR_WRITE_BETA
    prod: CFF_COSMOS_CONN_STR_WRITE_PROD
  googleKey:
    dev: none
    beta: CFF_GOOGLE_SHEETS_KEY_BETA
    prod: CFF_GOOGLE_SHEETS_KEY_PROD  
  mapsApiKey:
    dev: none
    beta: CFF_MAPS_API_KEY_BETA
    prod: CFF_MAPS_API_KEY_PROD
  mongoCollectionName:
    dev: cff_dev
    beta: cff_beta
    prod: cff_prod  

plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-iam-roles-per-function
  - '@silvermine/serverless-plugin-cloudfront-lambda-edge'