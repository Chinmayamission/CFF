trigger:
  tags:
    include:
    - v*

pool:
  vmImage: 'ubuntu-latest'

variables: 
- group: 'cff-deployment'

stages:
- stage: test
  jobs:
  - job: test_frontend
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '12.x'
      displayName: 'Install Node.js'
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.6'
        addToPath: true
        architecture: 'x64'
    - script: |
        sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2930ADAE8CAF5059EE73BB4B58712A2291FA4AD5
        echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.6 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.6.list
        sudo apt-get update
        sudo apt-get install -y mongodb-org
        mkdir data
        mongod --port=10255 --dbpath=data &
      workingDirectory: lambda
      displayName: 'start mongodb and import data'
    - script: |
        pip install pipenv
        pipenv install
        npm install
        npm test
      workingDirectory: lambda
      displayName: 'install deps, test'

  - job: test_backend
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '12.x'
      displayName: 'Install Node.js'
    - script: |
        npm install
        npm test
      displayName: 'install deps, test'

  - job: test_docs
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.6'
        addToPath: true
        architecture: 'x64'
    - script: |
        pip install mkdocs==1.1 mkdocs-material==4.6.3
        mkdocs build --clean
      displayName: 'build docs'

- stage: deploy_prod
  dependsOn: test
  condition: succeeded()
  jobs:
  - job: Deploy
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'Install Node.js'
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.6'
        addToPath: true
        architecture: 'x64'
    - script: |
        pip install pipenv
        pipenv install
        npm install
      workingDirectory: lambda
      displayName: 'install deps for backend'
    - script: |
        npm install
        pipenv install
      displayName: 'install deps for frontend'
    - script: |
        npm run deploy-prod
      displayName: 'deploy frontend'
      env:
        AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
        AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
    - script: |
        npm run deploy-prod
      workingDirectory: lambda
      displayName: 'deploy backend'
      env:
        AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
        AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
    - script: |
        pip install mkdocs==1.1 mkdocs-material==4.6.3
        npm run deploy-docs
      displayName: 'deploy docs'
      env:
        AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
        AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)